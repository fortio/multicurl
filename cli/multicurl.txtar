# testscript framework tests for multicurl command line

# Basic usage test
! multicurl
! stdout .
stderr 'Need 1 argument'

# -version
multicurl -version
stdout 'dev  go'
! stderr .

# -foo (bad flag)
! multicurl -foo
! stdout .
stderr 'flag provided but not defined: -foo'

# bad url
! multicurl 'http://a bad url'
stderr 'F Bad url "http://a bad url" : parse "http://a bad url": invalid character " " in host name'

# empty url
! multicurl ''
stderr 'F Unexpected empty url'

# positive test, scheme added (have to use -4 for positive tests because https://github.com/actions/runner-images/issues/668)
multicurl -4 -loglevel verbose debug.fortio.org
stderr 'resolver ip4,'
stderr 'Assuming http:// on missing scheme for "debug.fortio.org"'
stdout 'User-Agent: fortio.org/multicurl-'

# positive test, https
multicurl -loglevel verbose -4 https://debug.fortio.org/foo/bar
stderr 'resolver ip4,'
stderr 'V Resolving ip4 host debug.fortio.org port https'

# -6 error
! multicurl -6 localhost:9099
stderr 'Resolved ip6 '

# both
! multicurl -4 -6 localhost:9099
stderr 'Resolved ip '

# default
! multicurl -loglevel verbose localhost:9099
stderr 'I Resolved ip localhost:9099 to port 9099 and 2 addresses \[::1 127.0.0.1\]'

# resolve failure
! multicurl doesntexist.fortio.org
stderr 'E Unable to lookup "doesntexist.fortio.org": lookup doesntexist.fortio.org: no such host'

# redirect
multicurl -4 http://demo.fortio.org/x
stderr 'Total 0 errors \(2 warnings\)'
stderr 'Status 303 '

# bad port
! multicurl http://foo:90000/
stderr 'F Unable to resolve port "90000": address 90000: invalid port'

# -s mode
multicurl -4 -s http://demo.fortio.org/x
! stderr 'I Resolving'
stderr 'W Total 0 errors \(2 warnings\)'

# -i mode (assumes demo.fortio.org is fronted by cloudflare)
multicurl -4 -i http://demo.fortio.org/x
stdout 'HTTP/1.1 303 See Other'
stdout 'Server: cloudflare'

# -H clear User-Agent
multicurl -4 -loglevel verbose -H User-Agent: -H FOO-heaDER:bAr debug.fortio.org
! stdout User-Agent
stdout 'Foo-Header: bAr'

# Host header and a POST (count 2 is assuming cloudflare 2 ips)
multicurl -4 -loglevel verbose -H Host:debug.fortio.org -d 'foo bar' demo.fortio.org
stdout 'Debug server on'
stdout 'POST / HTTP/1.1'
stdout -count=2 'foo bar'
stderr 'V Will be setting special Host header to debug.fortio.org'

# bad -H
! multicurl -H foo debug.fortio.org
stderr 'invalid value "foo" for flag -H: invalid extra header .foo., expecting Key: Value'

# bad -o (missing pattern)
! multicurl -o foo debug.fortio.org
stderr 'F Output pattern must contain %$'

# write to files (if debug.fortio.org IP for a1 changes this will need an update, ditto if it's not 3 ipv4 addresses anymore)
multicurl -4 -o out.%.txt debug.fortio.org
stderr -count=3 'I .: Writing to out\.[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+\.txt'
grep 'Debug server on a1' out.18.222.136.83.txt

# error case
! multicurl -4 -i -o /doesnexist/debug.%.txt debug.fortio.org
stderr 'E Error creating file /doesnexist/debug.+: open /doesnexist/debug.+: no such file or directory'

# Weird method test - count depends on number of ip addresses for debug.fortio.org
multicurl -4 -X INFO -d 'blah blah' https://debug.fortio.org
stdout 'INFO / HTTP/2.0'
stdout -count=3 'blah blah'

# Debug summary of proxy is escaping the body thus the \n
multicurl -4 -d @payloadFile.txt https://debug.fortio.org
stderr 'I Read 23 bytes from "payloadFile.txt" as payload'
stdout 'POST / HTTP/2.0'
stdout 'Content-Length: 23'
stdout '^body:$'
stdout '^Just a test\\nof payload\\n$'

# payload file errror
! multicurl -4 -d @nosuchfile.txt https://debug.fortio.org
stderr 'F Unable to read payload from file "nosuchfile.txt": open nosuchfile.txt: no such file or directory'

# ip file error
! multicurl -4 -I nosuchfile.txt https://debug.fortio.org
stderr 'F Can.t get requested ips: open nosuchfile.txt: no such file or directory'

# ip file
multicurl -4 -I ips.txt https://debug.fortio.org
stderr '18.222.136.83'

# bad ip file
! multicurl -4 -I badIps.txt https://debug.fortio.org
stderr 'F Can.t get requested ips: unable to parse IP "not-an-ip"'

# good ipv6
! multicurl -I ipv6.txt http://foo:9099/
stderr 'I Resolved ip foo:9099 to port 9099 and 2 addresses \[::1 ::2\]'
stderr 'connect: connection refused'

-- payloadFile.txt --
Just a test
of payload
-- ips.txt --
18.222.136.83
192.9.227.83
-- badIps.txt --
not-an-ip
-- ipv6.txt --
# This is a comment, ignoref
[::1]
::2
